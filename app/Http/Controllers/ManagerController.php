<?php

namespace App\Http\Controllers;

use App\Models\User;
use Illuminate\Support\Facades\Validator;
use Illuminate\Http\Request;
use Auth;
use Input;
use Session;
use App\Models\Manager;
use App\Models\Hotel;
use App\Models\Booker;
use App\Models\Pricing;

class ManagerController extends Controller
{
    public function create(){
        return view('managers.signup');
    }

    public function store(Request $request){

        $this->validate($request,[
            'name' => 'required|min:3|max:50',
             'email' => 'required', 'string', 'email', 'max:255', 'unique:users',
            'password' => 'min:6|required_with:password_confirmation|same:password_confirmation',
            'password_confirmation' => 'min:6'
        ]);
        $input['email'] = $request->email;
            // Must not already exist in the `email` column of `users` table
            $rules = array('email' => 'unique:users,email');

            $validator = Validator::make($input, $rules);

            if ($validator->fails()) {
                Session::flash('message', 'The email address is already registered! Login instead.'); 
                return redirect()
                ->back()
                ->with('That email address is already registered. You sure you don\'t have an account?');
    
}
else {
    // Register the new user or whatever.
    User::create([
        'name' => $request->name,
        'email' => $request->email,
        'password' => bcrypt($request->password)
    ]);

}
 
        if (Auth::attempt($request->only('email', 'password'))) {
            
            return redirect()
                ->route('profile')
                ->with('Welcome! Your account has been successfully created!');
        }
    
        // Redirect
        return redirect()
            // To the previous page (probably the one generated by a `getRegister` method)
            ->back()
            // And with the input data (so that the form will get populated again)
            ->withInput();
    }

    public function signin(Request $request){
        return redirect()->route('login');
    }

    public function profile(){
        if(!Auth::check()){
            Session::flash('message', `You aren't logged or registered! Login instead.`);
            return redirect()->back()->with('Please register an account with us');    
    }
    if(Auth::check()){
        if(Auth::user()->isManager){
            return redirect()->back()->with('message', 'You already have a profile');
        }
    }
    
    return view('managers.profile');
    
}
    public function dashboard(){
if(Auth::check()){
        if(!isset(Auth::user()->manager)){
            return view('users.dash');
            
        }
            else if(isset(Auth::user()->manager)){
                if(!isset(Auth::user()->manager->hotel->pricing)){
            return view('managers.pricing',
            ['hotel' => Auth::user()->manager->hotel, 'pricings' => Pricing::all()]);
        }
            else{ 
                $hotels = Booker::where('hotel_id', '=', Auth::user()->manager->hotel->id)
            ->where('opened', '=', 0)->get();
            $rooms = Booker::where('hotel_id', '=', Auth::user()->manager->hotel->id);
            
                return view('managers.dash')
                ->with('hotels', $hotels)
                ->with('rooms', $rooms);  
            }
        }

    
    }
        return redirect()->route('login')
        ->with('message', 'Please Login or Register an account with us');
    }
    public function complete(Request $request, $id){
        if(Auth::check()){
        if(Auth::user()->isManager){
            return redirect()->route('pricing');
        }

        $user = User::find($id);

        $this->validate($request,[
            'title' => 'required',
            'address' => 'required',
            'staff' => 'required',
            'price_tag' => 'required',
            'room_no' => 'required', 
            'restaurant' => 'required',
            'city' => 'required',
            'banner' => 'required',
            'business_ex' => 'required',
            'location' => 'required',
            'phone' => 'required',
            'photo' => 'required' 
        ]);

        $input['title'] = $request->title;
            // Must not already exist in the `email` column of `users` table
            $rules = array('title' => 'unique:hotels,title');

            $validator = Validator::make($input, $rules);

            if ($validator->fails()) {
                Session::flash('message', 'The Hotel title you entered is already taken! Choose another one.'); 
                return redirect()
                ->back()->withErrors($validator)->withInput();
    
}else{

        $file = $request->photo;
        $file_new_name = time().$file->getClientOriginalName();

        $file->move('uploads/files/',$file_new_name);

        $banner = $request->banner;
        $banner_new_name = time().$banner->getClientOriginalName();

        $banner->move('uploads/banners/',$banner_new_name);

            $manager = Manager::create([
                'user_id' => $user->id,
                'location' => $request->location,
                'phone' => $request->phone,
                'photo' => 'uploads/files/'.$file_new_name,
                'business_ex' => $request->business_ex
            ]);
         $hotel = Hotel::create([
             'manager_id' => $manager->id,
             'title' => $request->title,
            'address' => $request->address,
            'staff' => $request->staff,
            'price_tag' => $request->price_tag,
            'room_no' => $request->room_no,
            'banner' => 'uploads/banners/'.$banner_new_name,
            'photo' => 'uploads/files/'.$file_new_name,
            'room_no' => $request->room_no,
            'city' => $request->city,
            'restaurant' => $request->restaurant,
             ]);

             $user->isManager = 1;
             $user->count += 10;
             $user->save();

            Session::flash('message', 'Successfully registered');
            return redirect()->route('pricing')->with('id', $hotel->id);
        }

      }
    }
        public function pricing(){
     
            if(Auth::check()){
                $hotel = Auth::user()->manager->hotel->id;

                if(!isset(Auth::user()->manager->hotel->pricing)){
            return view('managers.pricing')
            ->with('hotel', $hotel)
            ->with('pricings', Pricing::all());
                }
                
                else{
                    return redirect()->route('dashboard');
                }
            }else{
                return redirect()->route('login')->with('message', 'Please login first');
            }
            
        
    }
        public function pricesave(Request $request, $id){
            if(Auth::check()){
                $user = Auth::user();
                $hotel = Hotel::find($id);
                $hotel->pricing_id = $request->pricing_id;

                $hotel->save();
                $user->count += 10;
                $user->save();

                Session::flash('message', 'Successfully Added Pricing To your Hotel');    
                return redirect()->route('dashboard');

            }
            else{
                
                return redirect()->route('login')->with('login!');
            }
        }

        public function profiledit(){
            if(Auth::check()){
                    return view('profile.edit');
            }
            else{
                return redirect()->route('login', ['message' => 'You need to login']);
            }
        }

        public function profileupdate(Request $r){
            $user = Auth::user();
            
            if($r->has('title')){
                $user->manager->hotel->title = $r->title;
            }
            
            if($r->has('address')){
                $user->manager->hotel->address = $r->address;
            }

            
            if($r->has('room_no')){
                $user->manager->hotel->room_no = $r->room_no;
            }
            if($r->has('staff')){
                $user->manager->hotel->staff = $r->staff;
            }
            if($r->has('price_tag')){
                $user->manager->hotel->price_tag = $r->price_tag;
            }
            
            if($r->has('descr')){
                $user->manager->hotel->descr = $r->descr;
            }
            if($r->has('city')){
                $user->manager->hotel->city = $r->city;
            }
            if($r->has('restaurant')){
                $user->manager->hotel->restaurant = $r->restaurant;
            }
            if($r->hasFile('photo')){
                $photo = $r->photo;
                $photo_new_name = time() . $photo->getClientOriginalName();
                $photo->move('uploads/files/',$photo_new_name);
    
                $user->manager->photo = 'uploads/files/'.$photo_new_name;
                $user->manager->hotel->photo = 'uploads/files/'.$photo_new_name;
            }
            if($r->hasFile('banner')){
                $banner = $r->banner;
                $banner_new_name = time() . $banner->getClientOriginalName();
                $banner->move('uploads/banners/',$banner_new_name);
    
                $user->manager->hotel->banner = 'uploads/banners/'.$banner_new_name;
            }

            if($r->has('room_no')){
                $user->manager->hotel->room_no = $r->room_no;
            }
            if($r->has('location')){
                $user->manager->location = $r->location;
            }
            if($r->has('business_ex')){
                $user->manager->business_ex = $r->business_ex;
            }
            if($r->has('phone')){
                $user->manager->phone = $r->phone;
            }
            
            if($r->has('name')){
                $user->name = $r->name;
            }
            if($r->has('email')){
                $user->email = $r->email;
            }
            if($r->has('price_tag')){
                $user->manager->hotel->price_tag = $r->price_tag;
            }

            $user->save();
            $user->manager->save();
            $user->manager->hotel->save();

            return redirect()->route('dashboard')->with('success', 'Update was successful');
            
        }
 
}